import org.praxislive.tracker.*;

    @P(1) Patterns patterns;
    @P(2) @Type.Integer(min = 0)
    int pattern;
    @P(3) @Type.Integer(min = 0) @Transient
    int position;

    @Out(1) Output out1;
    @Out(2) Output out2;
    @Out(3) Output out3;
    @Out(4) Output out4;
    @Out(5) Output out5;
    @Out(6) Output out6;
    @Out(7) Output out7;
    @Out(8) Output out8;

    Output[] outs;

    @Override
    public void setup() {
        outs = new Output[]{out1, out2, out3, out4, out5, out6, out7, out8};

    }

    @Override
    public void starting() {
        position = 0;
    }

    @T(1)
    void trigger() {
        Pattern p;
        if (pattern >= patterns.getPatternCount()) {
            position = 0;
            return;
        }
        p = patterns.getPattern(pattern);
        position %= p.getRowCount();
        int max = min(p.getColumnCount(), outs.length);
        for (int i = 0; i < max; i++) {
            Argument arg = p.getValueAt(position, i);
            if (arg != null) {
                outs[i].send(arg);
            }
        }
        position++;
        position %= p.getRowCount();
    }

    @T(2)
    void reset() {
        position = 0;
    }
